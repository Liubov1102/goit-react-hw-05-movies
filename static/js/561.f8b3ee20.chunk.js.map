{"version":3,"file":"static/js/561.f8b3ee20.chunk.js","mappings":"uPAEaA,EAAMC,EAAAA,GAAAA,IAAH,yFAMHC,EAAOD,EAAAA,GAAAA,GAAH,qHAOJE,EAAWF,EAAAA,GAAAA,GAAH,wN,SCbRG,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OACE,SAACH,EAAD,UACGG,EAAKC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,UAACP,EAAD,YAEE,SAACH,EAAD,CAAKW,IAAG,0CAAqCH,GAAgBI,IAAKH,KAElE,uBAAIA,KACJ,uCAAeC,OALFH,SCavB,EAda,WACZ,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOV,EAAP,KAAaW,EAAb,KAKA,OAHAC,EAAAA,EAAAA,YAAU,YACTC,EAAAA,EAAAA,IAAaL,GAASM,KAAKH,KACzB,CAACH,KAEH,+BACC,SAACT,EAAD,CAAUC,KAAMA,Q,iMCZNe,EAAO,mCCIdC,E,MAAcC,GAAAA,OAAa,CAC/BC,QDNsB,kCCSXC,EAAc,mCAAG,6GAEHH,EAAYI,IDTd,qBCSgC,CACnDC,OAAQ,CAAEC,QAASP,KAHK,cAEpBQ,EAFoB,yBAKnBA,EAASC,KAAKC,SALK,gCAO1BC,QAAQC,IAAI,SAPc,yDAAH,qDAWdC,EAAY,mCAAG,WAAOC,GAAP,gGAECb,EAAYI,IDnBlB,eCmBkC,CACnDC,OAAQ,CAAEC,QAASP,EAAUc,MAAOA,KAHd,cAEhBN,EAFgB,yBAKjBA,EAASC,KAAKC,SALG,gCAOxBC,QAAQC,IAAI,SAPY,yDAAH,sDAWZG,EAAa,mCAAG,WAAO5B,GAAP,gGAEFc,EAAYI,IAAZ,gBAAyBlB,GAAM,CACpDmB,OAAQ,CAAEC,QAASP,KAHI,cAEnBQ,EAFmB,yBAKlBA,EAASC,MALS,gCAOzBE,QAAQC,IAAI,SAPa,yDAAH,sDAWbd,EAAY,mCAAG,WAAOX,GAAP,gGAEDc,EAAYI,IAAZ,gBAAyBlB,EAAzB,YAAuC,CAC5DmB,OAAQ,CAAEC,QAASP,KAHG,cAElBQ,EAFkB,yBAKjBA,EAASC,KAAKxB,MALG,gCAOxB0B,QAAQC,IAAI,SAPY,yDAAH,sDAWZI,EAAe,mCAAG,WAAO7B,GAAP,gGAEJc,EAAYI,IAAZ,gBAAyBlB,EAAzB,YAAuC,CAC5DmB,OAAQ,CAAEC,QAASP,KAHM,cAErBQ,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAO3BC,QAAQC,IAAI,SAPe,yDAAH","sources":["components/CastList/CastList.styled.js","components/CastList/CastList.jsx","pages/Cast/Cast.jsx","constants.api/constants.js","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Img = styled.img`\n    display: block;\n    max-width: 50%;\n    height: auto;    \n`;\n\nexport const List = styled.ul`\n    margin-top: 16px;\n    display: flex;\n    flex-wrap: wrap;\n    width: 950px;     \n    `;\n\nexport const CastItem = styled.li`\n    max-width: 280px;\n    display: flex;\n    flex-direction: column ;    \n    margin-right: 16px;\n    margin-bottom: 16px;\n    list-style: none;\n     > p{\n        margin: 4px;\n     }\n`;","import { List, CastItem, Img } from 'components/CastList/CastList.styled';\n\nexport const CastList = ({ cast }) => {\n  return (\n    <List>\n      {cast.map(({ id, profile_path, name, character }) => (\n        <CastItem key={id}>\n                \n          <Img src={`https://image.tmdb.org/t/p/w300/${profile_path}`} alt={name} />\n                            \n          <p>{name}</p>\n          <p>Character: {character}</p>\n        </CastItem>\n      ))}\n    </List>\n  )\n};","import { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getMovieCast } from 'services/api';\nimport { CastList } from 'components/CastList/CastList';\n\nconst Cast = () => {\n\tconst { movieId } = useParams();\n\tconst [cast, setCast] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetMovieCast(movieId).then(setCast)\n\t}, [movieId])\n\treturn (\n\t\t<>      \n\t\t\t<CastList cast={cast}/>      \n\t\t</>\n\t);\n};\n\nexport default Cast;\n\n\n","\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = `ed13542cc98255e453f3d93d2dcaa225`;\nexport const TRENDING_URL = `trending/movie/day`;\nexport const SEARCH_URL = `search/movie`;\n","import axios from 'axios';\nimport { BASE_URL } from 'constants.api/constants';\nimport { API_KEY } from 'constants.api/constants';\nimport { TRENDING_URL } from 'constants.api/constants';\nimport { SEARCH_URL } from 'constants.api/constants';\n\nconst customAxios = axios.create({\n  baseURL: BASE_URL,\n});\n\nexport const trendingMovies = async () => {\n  try {\n    const response = await customAxios.get(TRENDING_URL, {\n      params: { api_key: API_KEY }\n    })\n    return response.data.results;\n  } catch {\n    console.log('error');\n  }\n};\n\nexport const searchMovies = async (query) => {\n  try {\n      const response = await customAxios.get(SEARCH_URL, {\n      params: { api_key: API_KEY , query: query}\n    });\n    return response.data.results;\n   } catch {\n    console.log('error');\n  }\n};\n\nexport const getMoviesById = async (id) => {\n  try {\n    const response = await customAxios.get(`movie/${id}`, {\n      params: { api_key: API_KEY }\n    });\n    return response.data;\n   } catch {\n    console.log('error');\n  }\n};\n\nexport const getMovieCast = async (id) => {\n  try {\n    const response = await customAxios.get(`movie/${id}/credits`, {\n      params: { api_key: API_KEY }\n    });\n    return response.data.cast;\n     } catch {\n    console.log('error');\n  }\n};\n\nexport const getMovieReviews = async (id) => {\n  try {\n    const response = await customAxios.get(`movie/${id}/reviews`, {\n      params: { api_key: API_KEY }\n    });\n    return response.data.results;\n     } catch {\n    console.log('error');\n  }\n};"],"names":["Img","styled","List","CastItem","CastList","cast","map","id","profile_path","name","character","src","alt","movieId","useParams","useState","setCast","useEffect","getMovieCast","then","API_KEY","customAxios","axios","baseURL","trendingMovies","get","params","api_key","response","data","results","console","log","searchMovies","query","getMoviesById","getMovieReviews"],"sourceRoot":""}