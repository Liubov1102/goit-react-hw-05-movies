{"version":3,"file":"static/js/779.06346fe6.chunk.js","mappings":"sPAEaA,EAAeC,EAAAA,GAAAA,GAAH,+CAIZC,EAAeD,EAAAA,GAAAA,EAAH,4C,SC6BzB,EA9BgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GAASO,KAAKH,GAAYI,UACzC,CAACR,KAGF,8BACGG,EAAQM,OAAS,GAChB,wBACGN,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,yBAEE,4BACE,UAAChB,EAAD,sBAAuBe,MACvB,SAACb,EAAD,UAAec,QAJVF,SAWb,wE,0MC3BRG,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAO,mCAEAC,EAAc,mCAAG,oGACHF,IAAAA,IAAA,qCAAwCC,IADrC,cACpBE,EADoB,yBAEnBA,EAASC,KAAKC,SAFK,2CAAH,qDAKdC,EAAY,mCAAG,WAAOC,GAAP,uFACDP,IAAAA,IAAA,+BAAkCC,EAAlC,kBAAmDM,IADlD,cAClBJ,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKZG,EAAa,mCAAG,WAAOX,GAAP,uFACFG,IAAAA,IAAA,gBAAmBH,EAAnB,oBAAiCI,IAD/B,cACnBE,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKbK,EAAY,mCAAG,WAAOZ,GAAP,uFACDG,IAAAA,IAAA,gBAAmBH,EAAnB,4BAAyCI,IADxC,cAClBE,EADkB,yBAEjBA,EAASC,KAAKM,MAFG,2CAAH,sDAKZlB,EAAe,mCAAG,WAAOK,GAAP,uFACJG,IAAAA,IAAA,gBAAmBH,EAAnB,4BAAyCI,IADrC,cACrBE,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ReviewsTitle = styled.h4`\n  margin-bottom: 8px;\n`;\n\nexport const ReviewsTexst = styled.p`\n  margin-top: 0px;\n`;\n\n","import { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getMovieReviews } from 'services/api';\nimport {ReviewsTitle, ReviewsTexst} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(setReviews).catch()\n  }, [movieId])\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              \n              <div>\n                <ReviewsTitle>Author: {author}</ReviewsTitle>\n                <ReviewsTexst>{content}</ReviewsTexst>\n              </div>\n              \n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = `ed13542cc98255e453f3d93d2dcaa225`;\n\nexport const trendingMovies = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const searchMovies = async (query) => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`);\n    return response.data.results;\n};\n\nexport const getMoviesById = async (id) => {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n    return response.data;\n};\n\nexport const getMovieCast = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n};\n\nexport const getMovieReviews = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n    return response.data.results;\n};"],"names":["ReviewsTitle","styled","ReviewsTexst","movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","then","catch","length","map","id","author","content","axios","API_KEY","trendingMovies","response","data","results","searchMovies","query","getMoviesById","getMovieCast","cast"],"sourceRoot":""}