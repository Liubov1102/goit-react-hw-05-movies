{"version":3,"file":"static/js/229.7fef6737.chunk.js","mappings":"sPAEaA,EAAeC,EAAAA,GAAAA,GAAH,+CAIZC,EAAeD,EAAAA,GAAAA,EAAH,4C,SCJZE,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,wBACGA,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,yBAEE,4BACE,UAACR,EAAD,sBAAuBO,MACvB,SAACL,EAAD,UAAeM,QAJVF,SCkBjB,EAnBgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOP,EAAP,KAAgBQ,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBL,GAASM,KAAKH,KAC7B,CAACH,KAGF,8BACGL,EAAQY,OAAS,GAChB,SAACb,EAAD,CAAaC,QAASA,KAEtB,wE,iMChBKa,EAAO,mCCIdC,E,MAAcC,GAAAA,OAAa,CAC/BC,QDNsB,kCCSXC,EAAc,mCAAG,6GAEHH,EAAYI,IDTd,qBCSgC,CACnDC,OAAQ,CAAEC,QAASP,KAHK,cAEpBQ,EAFoB,yBAKnBA,EAASC,KAAKC,SALK,gCAO1BC,QAAQC,IAAI,SAPc,yDAAH,qDAWdC,EAAY,mCAAG,WAAOC,GAAP,gGAECb,EAAYI,IDnBlB,eCmBkC,CACnDC,OAAQ,CAAEC,QAASP,EAAUc,MAAOA,KAHd,cAEhBN,EAFgB,yBAKjBA,EAASC,KAAKC,SALG,gCAOxBC,QAAQC,IAAI,SAPY,yDAAH,sDAWZG,EAAa,mCAAG,WAAO1B,GAAP,gGAEFY,EAAYI,IAAZ,gBAAyBhB,GAAM,CACpDiB,OAAQ,CAAEC,QAASP,KAHI,cAEnBQ,EAFmB,yBAKlBA,EAASC,MALS,gCAOzBE,QAAQC,IAAI,SAPa,yDAAH,sDAWbI,EAAY,mCAAG,WAAO3B,GAAP,gGAEDY,EAAYI,IAAZ,gBAAyBhB,EAAzB,YAAuC,CAC5DiB,OAAQ,CAAEC,QAASP,KAHG,cAElBQ,EAFkB,yBAKjBA,EAASC,KAAKQ,MALG,gCAOxBN,QAAQC,IAAI,SAPY,yDAAH,sDAWZf,EAAe,mCAAG,WAAOR,GAAP,gGAEJY,EAAYI,IAAZ,gBAAyBhB,EAAzB,YAAuC,CAC5DiB,OAAQ,CAAEC,QAASP,KAHM,cAErBQ,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAO3BC,QAAQC,IAAI,SAPe,yDAAH","sources":["components/ReviewsList/ReviewsList.styled.js","components/ReviewsList/ReviewsList.jsx","pages/Reviews/Reviews.jsx","constants.api/constants.js","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ReviewsTitle = styled.h4`\n  margin-bottom: 8px;\n`;\n\nexport const ReviewsTexst = styled.p`\n  margin-top: 0px;\n`;","import { ReviewsTitle, ReviewsTexst } from './ReviewsList.styled';\n\nexport const ReviewsList = ({ reviews }) => {\n  return (\n    <ul>\n      {reviews.map(({ id, author, content }) => (\n        <li key={id}>\n              \n          <div>\n            <ReviewsTitle>Author: {author}</ReviewsTitle>\n            <ReviewsTexst>{content}</ReviewsTexst>\n          </div>\n              \n        </li>\n      ))}\n    </ul>\n  )\n};","import { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getMovieReviews } from 'services/api';\nimport { ReviewsList } from 'components/ReviewsList/ReviewsList';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(setReviews)\n  }, [movieId])\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ReviewsList reviews={reviews} />\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = `ed13542cc98255e453f3d93d2dcaa225`;\nexport const TRENDING_URL = `trending/movie/day`;\nexport const SEARCH_URL = `search/movie`;\n","import axios from 'axios';\nimport { BASE_URL } from 'constants.api/constants';\nimport { API_KEY } from 'constants.api/constants';\nimport { TRENDING_URL } from 'constants.api/constants';\nimport { SEARCH_URL } from 'constants.api/constants';\n\nconst customAxios = axios.create({\n  baseURL: BASE_URL,\n});\n\nexport const trendingMovies = async () => {\n  try {\n    const response = await customAxios.get(TRENDING_URL, {\n      params: { api_key: API_KEY }\n    })\n    return response.data.results;\n  } catch {\n    console.log('error');\n  }\n};\n\nexport const searchMovies = async (query) => {\n  try {\n      const response = await customAxios.get(SEARCH_URL, {\n      params: { api_key: API_KEY , query: query}\n    });\n    return response.data.results;\n   } catch {\n    console.log('error');\n  }\n};\n\nexport const getMoviesById = async (id) => {\n  try {\n    const response = await customAxios.get(`movie/${id}`, {\n      params: { api_key: API_KEY }\n    });\n    return response.data;\n   } catch {\n    console.log('error');\n  }\n};\n\nexport const getMovieCast = async (id) => {\n  try {\n    const response = await customAxios.get(`movie/${id}/credits`, {\n      params: { api_key: API_KEY }\n    });\n    return response.data.cast;\n     } catch {\n    console.log('error');\n  }\n};\n\nexport const getMovieReviews = async (id) => {\n  try {\n    const response = await customAxios.get(`movie/${id}/reviews`, {\n      params: { api_key: API_KEY }\n    });\n    return response.data.results;\n     } catch {\n    console.log('error');\n  }\n};"],"names":["ReviewsTitle","styled","ReviewsTexst","ReviewsList","reviews","map","id","author","content","movieId","useParams","useState","setReviews","useEffect","getMovieReviews","then","length","API_KEY","customAxios","axios","baseURL","trendingMovies","get","params","api_key","response","data","results","console","log","searchMovies","query","getMoviesById","getMovieCast","cast"],"sourceRoot":""}